server:
  port: 9527

spring:
  application:
    name: cloud-gateway-server
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心动态创建路由的功能 利用微服务名进行路由
      routes:
        - id: payment_route # 路由的ID， 没有固定规则但要求统一 建议配合服务台
          #uri: http://localhost:8001 # 匹配后提供服务的路由地址
          uri: lb://cloud-payment-service # 匹配后提供服务的路由地址
          predicates:
            - Path=/payment/get/** # 断言 路径相匹配的进行路由
        - id: payment_routh2 # payment_route 路由的ID 没有固定规则但要求唯一 建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service #匹配后提供服务的路由地址
          predicates:
            - Path=/payment/lb/**  # 断言 路径相匹配的进行路由
            - After=2022-04-19T16:54:47.826+08:00[Asia/Shanghai]  # 在这时间点之后才能访问接口
            #- Before=2022-04-19T16:54:47.826+08:00[Asia/Shanghai] # 在这个事件点之前才能访问
            #- Between=2022-04-19T16:54:47.826+08:00[Asia/Shanghai],2022-04-19T16:54:47.826+08:00[Asia/Shanghai] # 在这个时间点之间才能访问
            #- Cookie=username,yyqq
#            - Header=X-Request-Id, \d+  #请求头要有X-Request-Id 属性并且值为正数的正则表达式

eureka:
  instance:
    hostname: cloud-gateway-server
  client:
    # 表示是否将自己注册进EurekaService 默认是true
    register-with-eureka: true
    # 是否从EurekaService 抓取自己的注册信息， 默认为true 单个节点无所谓 ， 集群必须设置为true 才能配合ribbon 使用负载均衡
    fetch-registry: true
    service-url:
      #      defaultZone: http://eureka7002.com:7002/eureka/,http://eureka7001.com:7001/eureka/
      defaultZone: http://eureka7001.com:7001/eureka/